% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client.R
\docType{class}
\name{RestClient-class}
\alias{RestClient-class}
\alias{RestClient}
\title{A class representing a link to the Alveo virtual laboratory}
\description{
RestClient(server_uri)
\code{server_uri} is the URI of the Alveo server
}
\section{Fields}{

\describe{
\item{\code{server_uri}}{The URI of the Alveo server}
}}

\section{Methods}{

\describe{
\item{\code{create_item_list(items, name)}}{Create an item list on the Alveo server given a list of items (eg. the result of a query from search_metadata)}

\item{\code{delete_item_list(uri)}}{Delete the item list with the given uri}

\item{\code{download_items(items, destination, name, format = "zip")}}{download all items in this list of items, destination is the name of a directory to write the result in, format (zip or WARC or json). Returns the filename that is created.}

\item{\code{get_annotation_context()}}{Return the annotation context}

\item{\code{get_api_version()}}{Return the current API version number}

\item{\code{get_contribution(uri)}}{Get details of a contribution given the URL}

\item{\code{get_contributions()}}{Get a list of contributions. Return a list with components $own and $shared,
each contains a list of $id, $name, $url, $accessible}

\item{\code{get_item(uri)}}{Return an item given its URI. Returns an Item object.}

\item{\code{get_item_list(uri)}}{Return the item list with the given uri.}

\item{\code{get_item_list_by_id(id)}}{Return an item list given its identifier}

\item{\code{get_item_list_by_name(name)}}{Return an item list given its name}

\item{\code{get_item_list_uri_by_name(name)}}{Return an item list uri given it's name, 
if no such list is found, return NULL}

\item{\code{get_item_lists()}}{Return all of the item lists accessible to this user}

\item{\code{search_metadata(query)}}{Search metadata using the given query, return a list of items.}

\item{\code{sparql(query, collection)}}{Run a SPARQL query on the Alveo server against the given collection. Return the result.}
}}

\examples{
 
# read the configuration file \\code{alveo.config}
config <- read_config()
# create a client using the URI from the configuration
client <- RestClient(server_uri=config$base_url) 

}
